#!/bin/bash

#/ NAME
#/     build ami -- builds an AMI image
#/
#/ SYNOPSIS
#/   bin/build ami
#/
#/ EXAMPLES
#/     $ bin/build ami

# figure out the project root under which bin, lib live
shome="$(cd -P -- "$(dirname -- "$BASH_SOURCE")/.." && pwd -P)"

# load a jason bourne library
source "$shome/libexec/_jason"
require build
require ec2

# entry point
function main {
  prep_awscli
  time build_ami
}

function build_ami {
  # Build AMI
  local COMMAND_EXTRA=
  
  local nm_keypair="tmp-build-ami-keypair-$(date +%s)-$$"
  if [[ -f "$FLAGS_sshkey" ]]; then
    ec2-import-keypair --region $FLAGS_region --public-key-file $FLAGS_sshkey $nm_keypair
    COMMAND_EXTRA="-k $nm_keypair $COMMAND_EXTRA"
  else
    COMMAND_EXTRA="-k default $COMMAND_EXTRA"
  fi

  local source_ami="$(pick_ami)"
  COMMAND="ec2-run-instances --region $FLAGS_region -K $EC2_PRIVATE_KEY -C $EC2_CERT $source_ami -n 1 -t $FLAGS_instype --instance-initiated-shutdown-behavior stop -f $shome/libexec/ubuntu.sh $COMMAND_EXTRA"
  "Running $COMMAND"; echo

  local tmp_run="$(mktemp -t XXXXXXXXX)"
  $COMMAND | tee "$tmp_run"
  local INSTANCE_ID="$(awk '$1 == "INSTANCE" {print $2}' "$tmp_run")"
  rm -f "$tmp_run"

  if [[ -n "$INSTANCE_ID" ]]; then
    local status="$(ec2din --region "$FLAGS_region" "$INSTANCE_ID" | awk '$1 == "INSTANCE" { print $4 }')"
    local last_status
    while [[ "$status" != "stopped" && "$status" != "terminated" ]]; do
      if [[ "$status" != "$last_status" ]]; then
        if [[ -n "$last_status" ]]; then
          echo
        fi
        echo "status: $status"
        last_status="$status"

        if [[ "$status" != "pending" ]]; then
          while true; do
            if nc -z "$status" 22; then
              ssh -o "StrictHostKeyChecking no" ubuntu@"$status" bash -c "'while [[ ! -f /var/log/user-data.log ]]; do sleep 1; done; tail -f /var/log/user-data.log'" || true
              break
            else
              echo -n '.'
              sleep 5
            fi
          done
        fi
      else
        echo -n "."
      fi
      sleep 5
      status="$(ec2din --region "$FLAGS_region" "$INSTANCE_ID" | awk '$1 == "INSTANCE" { print $4 }')"
    done
    echo

    AMI_NAME=`date "+base_%Y-%m-%d-%H-%M"`
    ec2cim --region "$FLAGS_region" -K $EC2_PRIVATE_KEY -C $EC2_CERT -n $AMI_NAME $INSTANCE_ID
    ec2-terminate-instances --region "$FLAGS_region" $INSTANCE_ID
    if [[ -f "$FLAGS_sshkey" ]]; then
      ec2-delete-keypair --region $FLAGS_region $nm_keypair
    fi
  fi
}

require sub "$BASH_SOURCE" "$@"
