#!/bin/bash

export EC2_HOME="$(set +f; ls -d $shome/vendor/projects/ec2-api-tools*)"
export EC2_AMI_HOME="$(set +f; ls -d $shome/vendor/projects/ec2-ami-tools*)"
export AWS_CLOUDFORMATION_HOME="$(set +f; ls -d $shome/vendor/projects/AWSCloudFormation-*)"
export AWS_AUTO_SCALING_HOME="$(set +f; ls -d $shome/vendor/projects/AutoScaling-*)"

: ${JAVA_HOME:="$(/usr/libexec/java_home 2>&-)"}
export JAVA_HOME

if [[ -z "$JAVA_HOME" ]]; then
  logger_fatal "specify java install in environment variable JAVA_HOME"
  exit 1
fi

: ${AWS_CREDENTIAL_FILE:="$shome/config/aws.txt"}
export AWS_CREDENTIAL_FILE

if [[ -z "$AWS_CREDENTIAL_FILE" ]]; then
  logger_fatal "specify your aws keys in config/aws.txt"
  exit 1
fi

: ${AWS_SECRET_KEY:="$(ryaml config/aws.yml AWS_SECRET_KEY)"}
export AWS_SECRET_KEY

if [[ -z "$AWS_SECRET_KEY" ]]; then
  logger_fatal "specify your aws secret key in environment variable AWS_ACCESS_KEY or in config/aws.yml"
  exit 1
fi

: ${AWS_ACCESS_KEY:="$(ryaml config/aws.yml AWS_ACCESS_KEY)"}
export AWS_ACCESS_KEY

if [[ -z "$AWS_ACCESS_KEY" ]]; then
  logger_fatal "specify your aws access key in environment variable AWS_ACCESS_KEY or in config/aws.yml"
  exit 1
fi

: ${EC2_PRIVATE_KEY:="$shome/config/private-key.pem"}
export EC2_PRIVATE_KEY

if [[ -z "EC2_PRIVATE_KEY" ]]; then
  logger_fatal "specify your ec2 private certificate in environment variable EC2_PRIVATE_KEY or put in config/private-key.pem"
  exit 1
fi

: ${EC2_CERT:="$shome/config/certificate.pem"}
export EC2_CERT

if [[ -z "EC2_CERT" ]]; then
  logger_fatal "specify your ec2 public certificate in environment variable EC2_CERT or put in config/certificate.pem"
  exit 1
fi

PATH="$PATH:$EC2_HOME/bin:$EC2_AMI_HOME/bin:$AWS_CLOUDFORMATION_HOME/bin:$AWS_AUTO_SCALING_HOME/bin"
